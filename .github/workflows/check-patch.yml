---
name: Check patch

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: centos-stream-8
            shortcut: cs8
            container-name: el8stream
          - name: centos-stream-9
            shortcut: cs9
            container-name: el9stream
    name: ${{ matrix.name }}
    container:
      image: quay.io/ovirt/buildcontainer:${{ matrix.container-name }}

    steps:
      # Requried for python3-isort on cs8
      - name: Prepare CentOS Stream 8 environment
        if: ${{ matrix.shortcut == 'cs8' }}
        run: |
          dnf copr enable -y sbonazzo/EL8_collection

      # Requried for python3-isort on cs9
      - name: Prepare CentOS Stream 9 environment
        if: ${{ matrix.shortcut == 'cs9' }}
        run: |
          dnf copr enable -y sbonazzo/EL9Collection

      - name: Install dependencies
        run: |
          dnf install -y --setopt=tsflags=nodocs \
            python3-coverage \
            python3-isort \
            python3-pycodestyle \
            python3-pyflakes

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Test packaging and RPM building
        run: |
          mkdir -p exported-artifacts
          mkdir -p tmp.repos
          SUFFIX=".$(date -u +%Y%m%d%H%M%S).git$(git rev-parse --short HEAD)"
          ./autogen.sh --system
          make dist
          dnf builddep -y ovirt-hosted-engine-ha.spec
          rpmbuild \
              -D "_topdir $PWD/tmp.repos" \
              -D "release_suffix ${SUFFIX}" \
              -ta ovirt-hosted-engine-ha-*.tar.gz
          mv ./*.tar.gz exported-artifacts
          find \
              "$PWD/tmp.repos" \
              -iname \*.rpm \
              -exec mv {} exported-artifacts/ \;

      - name: Test RPM dependencies
        run: |
          dnf install -y --downloadonly ./exported-artifacts/*noarch.rpm

      - name: Test code
        run: |
          dnf install -y vdsm-client vdsm-python vdsm-jsonrpc
          make check
          make test
          coverage html \
            -d exported-artifacts/coverage_html_report \
            --rcfile="${PWD}/automation/coverage.rc"
          cp automation/index.html exported-artifacts/

      - name: Upload artifacts
        uses: ovirt/upload-rpms-action@v2
        with:
          directory: exported-artifacts

      - name: Comment PR with coverage data
        run: |
          dnf install -y epel-release
          dnf install -y python3-html2text
          html2text --ignore-images --ignore-links -b 0 exported-artifacts/coverage_html_report/index.html |\
          sed "s:# Coverage report:# Coverage report for ${{ matrix.container-name }}:" > pr_comment
          MESSAGE="$(cat pr_comment)"
          gh pr comment "${{ github.event.pull_request.number }}" --body "${MESSAGE}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name == 'pull_request'
